package it.algo.theharvestar.domain;

valueType java.util.Date as JavaDate {
  externalizeWith {
    String toString();
  }
}

//CLASSES

class Game {
  String state;
  String name;
  String format;
  Integer version;
  Integer socialCount;
  Integer transportCount;
  JavaDate createdAt;
}


class Terrain {
  Integer x;
  Integer y;
  Integer productionProbability;
  String terrainType;
}

class Player {
  String state;
  Integer userId;
  Integer slot;
  boolean ready;
  String avatar;
  Integer silicon;
  Integer energy;
  Integer water;
  Integer titanium;
  Integer grain;
  Integer score;
  Integer magicResource;
}

class Settlement {
  Integer level;
  Integer x;
  Integer y;
}

class Road {
  Integer x;
  Integer y;
}

// This is the root domain object
class Root {
  boolean loaded;         // auxiliary slot for the bootstrap sequence
  Integer numGameIds;    // for the generation of games ids
  Integer numPlayerIds;    // for the generation of players ids   
}

// RELATIONS

relation DomainRootHasRoot {
    .pt.ist.fenixframework.DomainRoot playsRole;
    Root playsRole app;
}

relation RootHasGames {
  Root playsRole root;
  Game playsRole games { multiplicity *; }
}

relation RootHasPlayers {
  Root playsRole root;
  Player playsRole players { multiplicity *; }
}


relation GameHasTerrains {
  Game playsRole game;
  Terrain playsRole terrains { multiplicity *; }
}

relation GameHasPlayers {
  Game playsRole game;
  Player playsRole players { multiplicity *; }
}

relation TerrainHasSettlements {
  Terrain playsRole terrains { multiplicity *; }
  Settlement playsRole settlements { multiplicity *; }
}

relation TerrainHasRoads {
  Terrain playsRole terrains { multiplicity *; }
  Road playsRole roads { multiplicity *; }
}

relation GameHasSettlements {
  Game playsRole game;
  Settlement playsRole settlements { multiplicity *; }
}

relation GameHasRoads {
  Game playsRole game;
  Road playsRole roads { multiplicity *; }
}

relation PlayerHasSettlements {
  Player playsRole player;
  Settlement playsRole settlements { multiplicity *; }
}

relation PlayerHasRoads {
  Player playsRole player;
  Road playsRole roads { multiplicity *; }
}
